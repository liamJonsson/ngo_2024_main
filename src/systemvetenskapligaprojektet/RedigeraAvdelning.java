/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package systemvetenskapligaprojektet;
import java.util.ArrayList;
import java.util.HashMap;
import oru.inf.InfDB;
import oru.inf.InfException;
/**
 *
 * @author limme
 */
public class RedigeraAvdelning extends javax.swing.JFrame {
    private InfDB idb;
    private String inloggadAnvandare;
    private int avdid;
    private int stadsID;
    private int chefsID;
    private String stad;
    private String chef;
    /**
     * Creates new form RedigeraAvdelning
     */
    public RedigeraAvdelning(InfDB idb, String inloggadAnvandare) {
        this.idb = idb;
        this.inloggadAnvandare = inloggadAnvandare;
        initComponents();
        lblFelmeddelandeID.setVisible(false);
        lblFelmeddelandeStad.setVisible(false);
        lblFelmeddelandeAvdelningschef.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRedigeraAvdelning = new javax.swing.JLabel();
        lblFraga = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        lblNamn = new javax.swing.JLabel();
        lblBeskrivning = new javax.swing.JLabel();
        lblAdress = new javax.swing.JLabel();
        lblEpost = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        lblStad = new javax.swing.JLabel();
        lblChef = new javax.swing.JLabel();
        tfBeskrivning = new javax.swing.JTextField();
        tfNamn = new javax.swing.JTextField();
        tfAdress = new javax.swing.JTextField();
        tfEpost = new javax.swing.JTextField();
        tfTelefon = new javax.swing.JTextField();
        tfStad = new javax.swing.JTextField();
        tfChef = new javax.swing.JTextField();
        btnTillbaka = new javax.swing.JButton();
        btnSpara = new javax.swing.JButton();
        lblFelmeddelandeID = new javax.swing.JLabel();
        lblFelmeddelandeStad = new javax.swing.JLabel();
        lblFelmeddelandeAvdelningschef = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblRedigeraAvdelning.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblRedigeraAvdelning.setText("Redigera Avdelning");

        lblFraga.setText("Vilken avdelning vill du redigera?");

        lblID.setText("AvdID");

        lblNamn.setText("Namn");

        lblBeskrivning.setText("Beskrivning");

        lblAdress.setText("Adress");

        lblEpost.setText("Epost");

        lblTelefon.setText("Telefon");

        lblStad.setText("Stad");

        lblChef.setText("Chef");

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        btnSpara.setText("Spara");
        btnSpara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaActionPerformed(evt);
            }
        });

        lblFelmeddelandeID.setForeground(new java.awt.Color(255, 0, 0));
        lblFelmeddelandeID.setText("Felaktigt ID");

        lblFelmeddelandeStad.setForeground(new java.awt.Color(255, 0, 0));
        lblFelmeddelandeStad.setText("Vänligen fyll i giltigt stadsID");

        lblFelmeddelandeAvdelningschef.setForeground(new java.awt.Color(255, 0, 0));
        lblFelmeddelandeAvdelningschef.setText("Vänligen fyll i ett giltigt ID för avdelningschefen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRedigeraAvdelning)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblFraga)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFelmeddelandeID))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBeskrivning)
                            .addComponent(lblNamn)
                            .addComponent(lblAdress)
                            .addComponent(lblEpost)
                            .addComponent(lblTelefon)
                            .addComponent(lblStad)
                            .addComponent(lblChef))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfChef, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(tfStad)
                            .addComponent(tfTelefon)
                            .addComponent(tfEpost)
                            .addComponent(tfAdress)
                            .addComponent(tfBeskrivning)
                            .addComponent(tfNamn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFelmeddelandeStad)
                            .addComponent(lblFelmeddelandeAvdelningschef)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTillbaka)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSpara)))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRedigeraAvdelning)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFraga)
                    .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFelmeddelandeID)
                    .addComponent(lblID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNamn)
                    .addComponent(tfNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBeskrivning)
                    .addComponent(tfBeskrivning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAdress)
                    .addComponent(tfAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEpost)
                    .addComponent(tfEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefon)
                    .addComponent(tfTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStad)
                    .addComponent(tfStad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFelmeddelandeStad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChef)
                    .addComponent(tfChef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFelmeddelandeAvdelningschef))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTillbaka)
                    .addComponent(btnSpara))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        new TestTable(idb,inloggadAnvandare).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void btnSparaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaActionPerformed
        boolean hasError = false;
        boolean hittad = false;
        try{
            try{
                String ID = tfID.getText();
                String selectAllaAvdid = "select avdid from avdelning;";
                ArrayList<String> allaAvdid = idb.fetchColumn(selectAllaAvdid);
                avdid = Integer.parseInt(ID);
                for(String ettAvdid:allaAvdid){
                    int ettID = Integer.parseInt(ettAvdid);
                    if(ettID==avdid){
                        hittad = true;
                        lblFelmeddelandeID.setVisible(false);
                        break;
                    }
                }
                if(!hittad){
                    lblFelmeddelandeID.setVisible(true);
                    hasError = true;
                }
            }
            catch(NumberFormatException ex){
                lblFelmeddelandeID.setVisible(true);
                hasError = true;    
            }
            if(!hasError){
                try{
                    hittad = false;
                    stad = tfStad.getText();
                    String selectAllaStader = "select sid from stad;";
                    ArrayList<String> allaStader = idb.fetchColumn(selectAllaStader);
                    if(!stad.isEmpty()){
                        stadsID = Integer.parseInt(stad);
                    }
                    for(String enStad:allaStader){
                        int ettStadsID = Integer.parseInt(enStad);
                        if(ettStadsID==stadsID || stad.isEmpty()){
                            hittad = true;
                            lblFelmeddelandeStad.setVisible(false);
                            break;
                        }
                    }
                    if(!hittad){
                        lblFelmeddelandeStad.setVisible(true);
                        hasError = true;
                    }
                }
                catch(NumberFormatException ex){
                    lblFelmeddelandeStad.setVisible(true);
                    hasError = true;
                }
            }
            if(!hasError){
                try{
                    hittad = false;
                    chef = tfChef.getText();
                    String selectAllaHandlaggare = "select aid from handlaggare;";
                    ArrayList<String> allaHandlaggare = idb.fetchColumn(selectAllaHandlaggare);
                    if(!chef.isEmpty()){
                        chefsID = Integer.parseInt(chef);
                    }
                    for(String enHandlaggare:allaHandlaggare){
                        int ettHandlaggarID = Integer.parseInt(enHandlaggare);
                        if(ettHandlaggarID==chefsID || chef.isEmpty()){
                            hittad = true;
                            lblFelmeddelandeAvdelningschef.setVisible(false);
                            break;
                        }
                    }
                    if(!hittad){
                        lblFelmeddelandeAvdelningschef.setVisible(true);
                        hasError = true;
                    }
                }
                catch(NumberFormatException ex){
                    lblFelmeddelandeAvdelningschef.setVisible(true);
                    hasError = true;
                }
            }
            if(!hasError){
                String namn = tfNamn.getText();
                String beskrivning = tfBeskrivning.getText();
                String adress = tfAdress.getText();
                String epost = tfEpost.getText(); //Kolla så att det verkligen är en epost-adress!
                String telefon = tfTelefon.getText();
                String selectEnAvdelning = "select * from avdelning where avdid = " + avdid + ";";
                HashMap<String,String> enAvdelning = idb.fetchRow(selectEnAvdelning);
                String[] enRad = new String[enAvdelning.size()];
                    for(String ettAttribut:enAvdelning.keySet()){
                        switch (ettAttribut){
                            case "avdid":
                                enRad[0] = enAvdelning.get("avdid");
                            case "namn":
                                enRad[1] = enAvdelning.get("namn");
                            case "beskrivning":
                                enRad[2] = enAvdelning.get("beskrivning");
                            case "adress":
                                enRad[3] = enAvdelning.get("adress");
                            case "epost":
                                enRad[4] = enAvdelning.get("epost");
                            case "telefon":
                                enRad[5] = enAvdelning.get("telefon");
                            case "stad":
                                enRad[6] = enAvdelning.get("stad");
                            case "chef":
                                enRad[7] = enAvdelning.get("chef");
                        }
                    }
                    if(namn.isEmpty()){
                        namn = enRad[1];
                    }
                    if(beskrivning.isEmpty()){
                        beskrivning = enRad[2];
                    }
                    if(adress.isEmpty()){
                        adress = enRad[3];
                    }
                    if(epost.isEmpty()){
                        epost = enRad[4];
                    }
                    if(telefon.isEmpty()){
                        telefon = enRad[5];
                    }   
                    if(stad.isEmpty()){
                        stad = enRad[6];
                        stadsID = Integer.parseInt(stad);
                    }
                    if(chef.isEmpty()){
                        chef = enRad[7];
                        chefsID = Integer.parseInt(chef);
                    }
                //Hämta från databasen och tilldela variablerna värden från den så de inte är tomma när de uppdateras!!
                String updateAvdelning = "update avdelning set namn = '" + namn + "', beskrivning = '" + beskrivning + "', adress = '" + adress + "', epost = '" 
                        + epost + "', telefon = '" + telefon + "', stad = " + stadsID + ", chef = " + chefsID + " where avdid = " + avdid + ";";
                idb.update(updateAvdelning);
                new TestTable(idb,inloggadAnvandare).setVisible(true);
                this.setVisible(false);
            }
        }
        catch(InfException ex){ //Catch InfExceptions?
                System.out.println(ex);
        }
    }//GEN-LAST:event_btnSparaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RedigeraAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RedigeraAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RedigeraAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RedigeraAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new RedigeraAvdelning().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSpara;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JLabel lblAdress;
    private javax.swing.JLabel lblBeskrivning;
    private javax.swing.JLabel lblChef;
    private javax.swing.JLabel lblEpost;
    private javax.swing.JLabel lblFelmeddelandeAvdelningschef;
    private javax.swing.JLabel lblFelmeddelandeID;
    private javax.swing.JLabel lblFelmeddelandeStad;
    private javax.swing.JLabel lblFraga;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblNamn;
    private javax.swing.JLabel lblRedigeraAvdelning;
    private javax.swing.JLabel lblStad;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JTextField tfAdress;
    private javax.swing.JTextField tfBeskrivning;
    private javax.swing.JTextField tfChef;
    private javax.swing.JTextField tfEpost;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfNamn;
    private javax.swing.JTextField tfStad;
    private javax.swing.JTextField tfTelefon;
    // End of variables declaration//GEN-END:variables
}
